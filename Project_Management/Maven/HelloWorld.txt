Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-04-09T13:49:18+08:00

====== HelloWorld ======
Created 星期日 09 四月 2017

1. Download from Apache, extract it to C:/P&F
2. add MAVEN_HOME, add %MAVEN_HOME%\bin to path
NOTE: Intellij integrate maven in the way of plugin

mvn archetype:generate -DarchetypeArtifactId=maven-archetype-archetype
mvn install	install jar to repo so that other pom could use it
mvn install:install-file -Dfile=jar_path -DgroupId= -DartifactId= -Dversion= -Dpackaging=jar	install a jar to repo
mvn eclipse:eclipse		convert to eclipse project		mvn eclipse : clean	mvn idea : idea
mvn exec:java -Dexec.mainClass=package name.class name

==== search groupid artifactid version ====
mvnrepository.com

==== maven default lifecycle ====
1. Process resources
2. compile
3. process classes
4. process test resources
5. test compile
6. test
7. ...


==== maven lifecycle ====
clean
default
site

==== property list ====
1. project.*
2. settings.*
3. env.*
4. java.*
5. os.*	os.name os.arch os.version
6. file.separator
7. path.separator
8. line.separator
9. user.name user.home user.dir

==== maven help ====
mvn -h
mvn help : describe -Dplugin=eclipse

mvn help : active-profiles
mvn help : all-profiles

1. 创建Maven的普通java项目： 
   mvn archetype:create 
   -DgroupId=packageName 
   -DartifactId=projectName  
2. 创建Maven的Web项目：   
	mvn archetype:create 
	-DgroupId=packageName    
	-DartifactId=webappName 
	-DarchetypeArtifactId=maven-archetype-webapp    
3. 编译源代码： mvn compile 
4. 编译测试代码：mvn test-compile    
5. 运行测试：mvn test   
6. 产生site：mvn site   
7. 打包：mvn package   
8. 在本地Repository中安装jar：mvn install 
9. 清除产生的项目：mvn clean   
10. 生成eclipse项目：mvn eclipse:eclipse  
11. 生成idea项目：mvn idea:idea  
12. 组合使用goal命令，如只打包不测试：mvn -Dtest package   
13. 编译测试的内容：mvn test-compile  
14. 只打jar包: mvn jar:jar  
15. 只测试而不编译，也不测试编译：mvn test -skipping compile -skipping test-compile 
	  ( -skipping 的灵活运用，当然也可以用于其他组合命令)  mvn install -Dmaven.test.skip = true
16. 清除eclipse的一些系统设置:mvn eclipse:clean
